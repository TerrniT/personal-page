---
import { type CollectionEntry, getCollection } from 'astro:content'

import BackToPrev from '@components/BackToPrev.astro'
import FormattedDate from '@components/FormattedDate.astro'

import PageLayout from '@layouts/PageLayout.astro'

import { readingTime } from '@lib/utils'

export async function getStaticPaths() {
  const posts = (await getCollection('articles'))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }))
}
type Props = CollectionEntry<'articles'>

const post = Astro.props
const { Content } = await post.render()
---

<PageLayout title={post.data.title} description={post.data.description}>
  <div class="animate">
    <BackToPrev href="/articles"> Back to articles </BackToPrev>
  </div>
  <div class="my-10 space-y-1">
    <div class="animate flex items-center gap-1.5">
      <div class="font-base text-sm">
        <FormattedDate date={post.data.date} />
      </div>
      &bull;
      <div class="font-base text-sm">
        {readingTime(post.body)}
      </div>
    </div>

    <p class="animate text-2xl font-semibold text-black dark:text-white">
      {post.data.title}
    </p>
    <div class="my-2 flex flex-row gap-x-2">
      {
        post.data.tags &&
          post.data.tags.length > 0 &&
          post.data.tags.map((tag) => (
            <span class="animate w-fit rounded-sm bg-muted-foreground/10 px-1 py-0.5 text-xs text-muted-foreground">
              {tag}
            </span>
          ))
      }
    </div>
    {
      post.data.cover_url && (
        <div class="my-5 w-full rounded-md">
          <img src={'/articles/' + post.data.cover_url} alt={post.data.title} class="animate mt-3 rounded-md" />
        </div>
      )
    }
  </div>
  <article class="animate">
    <Content />
  </article>
</PageLayout>
